{
  "variables": {
    "aws_access_key": "",
    "aws_secret_key": ""
  },
  "builders": [{
    "type": "amazon-ebs",
    "access_key": "{{user `aws_access_key`}}",
    "secret_key": "{{user `aws_secret_key`}}",
    "region": "eu-west-1",
    "source_ami_filter": {
      "filters": {
        "virtualization-type": "hvm",
        "name": "ubuntu/images/*ubuntu-xenial-16.04-amd64-server-*",
        "root-device-type": "ebs"
      },
      "owners": ["099720109477"],
      "most_recent": true
    },
    "instance_type": "t2.micro",
    "ssh_username": "ubuntu",
    "ami_name": "aws-migrations-workshop-app {{timestamp}}"
  }],
  "provisioners": [
    {
      "type": "file",
      "source": "nginx.conf",
      "destination": "/tmp/nginx.conf"
    },
    {
      "type": "shell",
      "inline": [
        "sleep 30",
        "sudo add-apt-repository -y ppa:ondrej/php",
        "sudo apt-get update -y",
        "sudo apt-get install -y unzip nginx php7.2-fpm php7.2-xml php7.2-mbstring php7.2-zip",
        "php -r \"copy('https://getcomposer.org/installer', 'composer-setup.php');\"",
        "php -r \"if (hash_file('sha384', 'composer-setup.php') === 'e0012edf3e80b6978849f5eff0d4b4e4c79ff1609dd1e613307e16318854d24ae64f26d17af3ef0bf7cfb710ca74755a') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;\"",
        "php composer-setup.php",
        "php -r \"unlink('composer-setup.php');\"",
        "sudo mv composer.phar /usr/bin/composer",
        "sudo mkdir /usr/share/nginx/aws-migrations-workshop-scripts",
        "sudo chown ubuntu:ubuntu /usr/share/nginx/aws-migrations-workshop-scripts",
        "git clone https://github.com/rasensio/aws-migrations-workshop-scripts /usr/share/nginx/aws-migrations-workshop-scripts",
        "cd /usr/share/nginx/aws-migrations-workshop-scripts/app",
        "composer install",
        "sudo rm /etc/nginx/sites-enabled/default",
        "sudo cp /tmp/nginx.conf /etc/nginx/sites-available/aws-migrations-workshop-app",
        "sudo ln -s /etc/nginx/sites-available/aws-migrations-workshop-app /etc/nginx/sites-enabled/",
        "sudo service nginx restart"
      ]
    }
  ]
}
